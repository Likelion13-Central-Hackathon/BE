name: CD with Gradle

on:
  workflow_run:
    workflows: ["CI with Gradle"] # CI 워크플로 이름과 정확히 일치해야 함
    types: [completed] # CI가 끝났을 때 트리거
    branches: ["main" , "develop"]

env:
  IMAGE: ${{ secrets.DOCKER_USERNAME }}/be

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    # CI 성공일 때만 배포
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # SSH로 서버에 접속해 배포
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            
            # (프라이빗 레포일 경우) Docker Hub 로그인
            if [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            fi
            
            echo "${{ secrets.ENV_FILE }}" > /home/${{ secrets.SSH_USER }}/.env
            echo "[1/3] Pull latest Docker image..."
            docker pull ${{ env.IMAGE }}:latest

            echo "[2/3] Restart container with new image..."
            docker stop [be] || true
            docker rm [be] || true
            docker run -d --name [be] \
              --env-file /home/${{ secrets.SSH_USER }}/.env \
              -p 8080:8080 \
              ${{ env.IMAGE }}:latest
            
            
            echo "[3/3] Cleanup unused images..."
            docker image prune -f